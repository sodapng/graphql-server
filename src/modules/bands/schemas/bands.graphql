type Band {
  id: ID!
  name: String
  origin: String
  members: [Member]
  website: String
  genres: [Genre]
}

type Member {
  artist: String
  instrument: String
  years: String
}

input MemberInput {
  artist: String
  instrument: String
  years: String
}

input CreateBandInput {
  name: String!
  origin: String
  members: [MemberInput]
  website: String
  genresIds: [ID]
}

input UpdateBandInput {
  name: String
  origin: String
  members: [MemberInput]
  website: String
  genresIds: [ID]
}

type Query {
  bands(limit: Int, offset: Int): [Band]
  band(id: ID!): Band
}

type Mutation {
  createBand(createBandInput: CreateBandInput!): Band!
  updateBand(id: ID!, updateBandInput: UpdateBandInput): Band!
  deleteBand(id: ID!): Delete
}
